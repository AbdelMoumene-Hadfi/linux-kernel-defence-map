//
// Linux Kernel Defence Map (for v4.16) shows the relations between:
//  - vulnerability classes / exploitation techniques,
//  - kernel defences,
//  - bug detection means.
//
// N.B. The node connections don't mean "full mitigation". These connections
// represent some kind of relation. So ideally, this map should help to navigate
// in documentation and Linux kernel sources.
//
// It is written in DOT language.
// How to generate png:
//    dot -Tpng linux-kernel-defence-map.dot -o linux-kernel-defence-map.png
//
// TODO:
//    - Attack surface reduction (like seccomp, LSM)
//
// References:
//
//  - The State of Kernel Self Protection by Kees Cook
//     https://outflux.net/slides/2018/lca/kspp.pdf
//
//  - grsecurity features
//     https://grsecurity.net/features.php
//
//  - Linux kernel security documentation:
//     https://www.kernel.org/doc/html/latest/security/self-protection.html
//
//  - Linux kernel mitigation checklist by Shawn C
//     https://github.com/hardenedlinux/grsecurity-101-tutorials/blob/master/kernel_mitigation.md
//

digraph {
  labelloc=top;
  fontsize=30;
  label="Linux Kernel Defence Map";
  compound=true;

  rankdir=LR;
  node [style=filled];

  subgraph cluster_legend {
    fontsize=25;
    label="Legend:";

    "Mainline Defences" [shape=oval, color=palegreen3];
    "Out-of-tree Defences" [shape=oval, color=cornflowerblue];
    "Commercial Defences" [shape=oval, color=lightgrey];
    "HW Defences" [shape=oval, color=aquamarine];
    "Defence Techniques" [shape=octagon, color=black, style=solid];
    "Bug Detection" [shape=octagon, color=mediumpurple];
    "Vulnerabilities" [shape=box, color=pink];
    "Exploitation Techniques" [shape=box, color=gold];
  }

  // For pretty legend layout:
  edge [arrowhead=none, style=invis];
  "Mainline Defences" -> "Out-of-tree Defences" -> "Commercial Defences" -> "HW Defences";
  "Defence Techniques" -> "Bug Detection" -> "Vulnerabilities" -> "Exploitation Techniques";


  // Defences
  {
    rank=same;

    // Defence Techniques
    node [shape=octagon, color=black, style=solid];
    "Heap free() Poisoning";

    // Mainline Defences
    node [shape=oval, color=palegreen3, style=filled];
    "CC_STACKPROTECTOR";
    "FORTIFY_SOURCE";
    "DEBUG_{LIST,SG,CREDENTIALS,NOTIFIERS}";
    "SLUB_DEBUG_ON";
    "SLAB_FREELIST_HARDENED";
    "PAGE_TABLE_ISOLATION";
    "SLAB_FREELIST_RANDOM";
    "Printed Pointer Hashing";
    "KASLR"; // RANDOMIZE_BASE, RANDOMIZE_MEMORY
    "STRICT_{KERNEL,MODULE}_RWX";
    "DEBUG_WX";
    "BUG_ON_DATA_CORRUPTION";
    "MODULE_SIG*";
    "SECURITY_LOADPIN";
    "RETPOLINE";
    "bpf_jit_harden";
    "DEFAULT_MMAP_MIN_ADDR=65536";
    "SCHED_STACK_END_CHECK";
    "TIF_SETFS flag";

    // Out-of-tree Defences
    node [shape=oval, color=cornflowerblue];
    "XPFO";
    "PROTECTABLE_MEMORY";
    "request_module_cap()";

    // Commercial Defences
    node [shape=oval, color=lightgrey];
    "GRKERNSEC_KSTACKOVERFLOW";
    "PAX_REFCOUNT";
    "PAX_SIZE_OVERFLOW";
    "PAX_USERCOPY";
    "PAX_KERNEXEC";
    "GRKERNSEC_HIDESYM";
    "GRKERNSEC_RANDSTRUCT";
    "PAX_LATENT_ENTROPY";
    "PAX_CONSTIFY_PLUGIN";
    "PAX_RANDKSTACK";
    "GRKERNSEC_JIT_HARDEN";
    "PAX_MEMORY_STRUCTLEAK";
    "PAX_MEMORY_STACKLEAK";
    "GRKERNSEC_MODHARDEN";
    "__read_only";
    "GRKERNSEC_DMESG";
    grsecurity_hardened_freelist [label="by default in grsecurity"];
    grsecurity_hardened_usermodehelper [label="by default in grsecurity"];
    "Respectre";

    // HW Defences
    node [shape=oval, color=aquamarine];
    "SMEP/PXN";
  }

  subgraph cluster_smap_pan_uderef {
    label="";
    "SMAP/PAN" [shape=oval, color=aquamarine]; // HW Defence
    "PAX_UDEREF" [shape=oval, color=lightgrey]; // Commercial Defence
  }

  subgraph cluster_cfi {
    label="";
    "PAX_RAP" [shape=oval, color=lightgrey]; // Commercial Defence
    "Clang CFI" [shape=oval, color=cornflowerblue]; // Out-of-tree Defence
  }

  // Defences: child nodes and relations
  {
    rank=same;

    // Mainline Defences
    node [shape=oval, color=palegreen3];
    "REFCOUNT_FULL";
    "HARDENED_USERCOPY";
    "PAGE_POISONING";
    "VMAP_STACK";
    "THREAD_INFO_IN_TASK";
    "RANDSTRUCT";
    "STRUCTLEAK";
    "LATENT_ENTROPY";
    "__ro_after_init";
    "SECURITY_DMESG_RESTRICT";
    "CPU_SW_DOMAIN_PAN";
    "ARM64_SW_TTBR0_PAN";
    "STATIC_USERMODEHELPER";
    "slub_debug=P";

    // Commercial Defences
    node [shape=oval, color=lightgrey];
    "PAX_MEMORY_SANITIZE";

    // Out-of-tree Defences
    node [shape=oval, color=cornflowerblue];
    "STACKLEAK";
  }

  edge [style=dotted, arrowhead=none, dir=none, headport=_, tailport=_];
  "REFCOUNT_FULL" -> "PAX_REFCOUNT";
  "HARDENED_USERCOPY" -> "PAX_USERCOPY";
  "PAGE_POISONING" -> "PAX_MEMORY_SANITIZE";
  "VMAP_STACK" -> "GRKERNSEC_KSTACKOVERFLOW";
  "THREAD_INFO_IN_TASK" -> "GRKERNSEC_KSTACKOVERFLOW";
  "RANDSTRUCT" -> "GRKERNSEC_RANDSTRUCT";
  "STRUCTLEAK" -> "PAX_MEMORY_STRUCTLEAK";
  "LATENT_ENTROPY" -> "PAX_LATENT_ENTROPY";
  "__ro_after_init" -> "__read_only";
  "SECURITY_DMESG_RESTRICT" -> "GRKERNSEC_DMESG";
  "STACKLEAK" -> "PAX_MEMORY_STACKLEAK";
  "CPU_SW_DOMAIN_PAN" -> "SMAP/PAN";
  "ARM64_SW_TTBR0_PAN" -> "SMAP/PAN";
  "STATIC_USERMODEHELPER" -> grsecurity_hardened_usermodehelper;
  "SLAB_FREELIST_HARDENED":w -> grsecurity_hardened_freelist:w;
  "PAX_MEMORY_SANITIZE" -> "Heap free() Poisoning":w [style=filled];
  "slub_debug=P" -> "Heap free() Poisoning":w [style=filled];
  "slub_debug=P" -> "SLUB_DEBUG_ON";


  // Vulnerabilities and Exploitation Techniques
  {
    rank=same;

    // Vulnerabilities
    node [shape=box, color=pink];
    "Stack Depth Overflow (CWE-674,?)";
    "General Buffer Overflow (CWE-120)";
    "Stack Buffer Overflow (CWE-121)";
    "Int Overflow/Underflow (CWE-128/191)";
    "Uninitialized Vars (CWE-457)";
    "Use-After-Free (CWE-416)";
    "Double Free (CWE-415)";
    "NULL Pointer Dereference (CWE-476)";
    "Info Exposure (CWE-200)";
    "Race Condition (CWE-362)";
    "Undefined Behaviour (CWE-758)";
    "Type Confusion (CWE-843)";
    "Side Channels (CWE-514)";
    "Unbalanced set_fs()";

    // Exploitation Techniques
    node [shape=box, color=gold];
    "Metadata Corruption";
    "Function Pointer Overwrite";
    "Heap Spray";
    "Code Reuse";
    "ret2usr";
    "userspace data access";
    "ret2usr + ROP";
    "ret2dir";
    "ret2dir + ROP";
    "Finding Kernel Objects";
    "JIT Abuse";
    "WX Area Abuse";
    "Bad Module Loading";
  }

  edge [style=dotted, arrowhead=none, dir=none, headport=e, tailport=e];
  "General Buffer Overflow (CWE-120)" -> "Stack Buffer Overflow (CWE-121)";
  "General Buffer Overflow (CWE-120)" -> "Int Overflow/Underflow (CWE-128/191)";
  "Int Overflow/Underflow (CWE-128/191)" -> "Double Free (CWE-415)";
  "Info Exposure (CWE-200)" -> "Finding Kernel Objects";
  "Metadata Corruption" -> "Function Pointer Overwrite";


  // Bug Detection Means
  {
    rank=same;
    node [shape=octagon, color=mediumpurple];

    "KASAN";
    "UBSAN";
    "KMSAN";
    "KTSAN";
  }


  // Relations: Bug Detection Means vs Vulnerabilities
  edge [style=solid, arrowhead=normal, dir=back, headport=_, tailport=_];
  "General Buffer Overflow (CWE-120)" -> "KASAN";
  "Stack Buffer Overflow (CWE-121)" -> "KASAN";
  "Use-After-Free (CWE-416)" -> "KASAN";
  "Double Free (CWE-415)" -> "KASAN";
  "Undefined Behaviour (CWE-758)" -> "UBSAN";
  "Uninitialized Vars (CWE-457)" -> "KMSAN";
  "Info Exposure (CWE-200)" -> "KMSAN";
  "Race Condition (CWE-362)" -> "KTSAN";


  // Relations: Defences vs Vulnerabilities and Exploitation Techniques
  edge [style=solid, arrowhead=normal, dir=forward, headport=_, tailport=_];
  "GRKERNSEC_KSTACKOVERFLOW" -> "Stack Depth Overflow (CWE-674,?)";
  "PAX_MEMORY_STACKLEAK" -> "Stack Depth Overflow (CWE-674,?)";
  "SCHED_STACK_END_CHECK" -> "Stack Depth Overflow (CWE-674,?)";

  "PAX_USERCOPY" -> "General Buffer Overflow (CWE-120)";
  "FORTIFY_SOURCE" -> "General Buffer Overflow (CWE-120)";

  "CC_STACKPROTECTOR" -> "Stack Buffer Overflow (CWE-121)";

  "PAX_REFCOUNT" -> "Int Overflow/Underflow (CWE-128/191)";
  "PAX_SIZE_OVERFLOW" -> "Int Overflow/Underflow (CWE-128/191)";

  "PAX_MEMORY_STACKLEAK" -> "Uninitialized Vars (CWE-457)";
  "PAX_MEMORY_STRUCTLEAK" -> "Uninitialized Vars (CWE-457)";
  "Heap free() Poisoning":e -> "Uninitialized Vars (CWE-457)";

  "Heap free() Poisoning":e -> "Use-After-Free (CWE-416)";

  "SLUB_DEBUG_ON" -> "Double Free (CWE-415)";
  "SLAB_FREELIST_HARDENED" -> "Double Free (CWE-415)";

  "DEFAULT_MMAP_MIN_ADDR=65536" -> "NULL Pointer Dereference (CWE-476)";

  "PAX_MEMORY_STACKLEAK" -> "Info Exposure (CWE-200)";
  "GRKERNSEC_HIDESYM" -> "Info Exposure (CWE-200)";
  "Printed Pointer Hashing" -> "Info Exposure (CWE-200)";
  "Heap free() Poisoning":e -> "Info Exposure (CWE-200)";
  "PAX_MEMORY_STRUCTLEAK" -> "Info Exposure (CWE-200)";
  "GRKERNSEC_DMESG" -> "Info Exposure (CWE-200)";

  "PAGE_TABLE_ISOLATION" -> "Side Channels (CWE-514)";
  "RETPOLINE" -> "Side Channels (CWE-514)";
  "Respectre" -> "Side Channels (CWE-514)";

  "TIF_SETFS flag" -> "Unbalanced set_fs()";

  "DEBUG_{LIST,SG,CREDENTIALS,NOTIFIERS}" -> "Metadata Corruption";
  "BUG_ON_DATA_CORRUPTION" -> "Metadata Corruption";
  "SLUB_DEBUG_ON" -> "Metadata Corruption";
  "SLAB_FREELIST_RANDOM" -> "Metadata Corruption";
  "SLAB_FREELIST_HARDENED" -> "Metadata Corruption";
  "PROTECTABLE_MEMORY" -> "Metadata Corruption";
  grsecurity_hardened_usermodehelper -> "Metadata Corruption";
  grsecurity_hardened_freelist -> "Metadata Corruption";

  "PAX_CONSTIFY_PLUGIN" -> "Function Pointer Overwrite";
  "__read_only" -> "Function Pointer Overwrite";

  "SLAB_FREELIST_RANDOM" -> "Heap Spray";

  "PAX_RAP":e -> "Code Reuse" [ltail=cluster_cfi];

  "PAX_KERNEXEC":e -> "ret2usr";
  "PAGE_TABLE_ISOLATION" -> "ret2usr";
  "SMEP/PXN" -> "ret2usr";
  "SMAP/PAN":se -> "ret2usr" [ltail=cluster_smap_pan_uderef];

  "PAX_UDEREF":ne -> "userspace data access" [ltail=cluster_smap_pan_uderef];

  "PAX_UDEREF":ne -> "ret2usr + ROP" [ltail=cluster_smap_pan_uderef];
  "PAX_RAP":e -> "ret2usr + ROP" [ltail=cluster_cfi];

  "PAX_KERNEXEC":e -> "ret2dir";
  "XPFO" -> "ret2dir";

  "XPFO" -> "ret2dir + ROP";
  "PAX_RAP":e -> "ret2dir + ROP" [ltail=cluster_cfi];

  "KASLR" -> "Finding Kernel Objects";
  "GRKERNSEC_RANDSTRUCT" -> "Finding Kernel Objects";
  "PAX_RANDKSTACK" -> "Finding Kernel Objects";
  "PAX_LATENT_ENTROPY" -> "Finding Kernel Objects";

  "GRKERNSEC_JIT_HARDEN" -> "JIT Abuse";
  "bpf_jit_harden" -> "JIT Abuse";

  "PAX_KERNEXEC":e -> "WX Area Abuse";
  "STRICT_{KERNEL,MODULE}_RWX" -> "WX Area Abuse";
  "DEBUG_WX" -> "WX Area Abuse";

  "GRKERNSEC_MODHARDEN" -> "Bad Module Loading";
  "MODULE_SIG*" -> "Bad Module Loading";
  "SECURITY_LOADPIN" -> "Bad Module Loading";
  "request_module_cap()" -> "Bad Module Loading";
}
